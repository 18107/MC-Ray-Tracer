package mod.id107.raytracer.chunk;

import java.util.HashMap;

import mod.id107.raytracer.Log;
import mod.id107.raytracer.Matrices;

public class Maps {
	
	//generated by using "new Matrices().getMatrices();"
	//copy from console to frag.fs after generating
	private static final int NONE = 0;
	private static final int MIRROR = 1;
	
	private static final int RIGHT = 2;
	private static final int LEFT = 4;
	private static final int OVER = 6;
	
	private static final int EAST = 8;
	private static final int WEST = 16;
	private static final int NORTH = 24;
	private static final int UP = 32;
	private static final int DOWN = 40;
	
	private static HashMap<Integer, int[]> chunkMap;
	private static MapUtil mapUtil;
	private static int[][][] idMap;
	
	public static int[] getBlock(int id) {
		int[] block = chunkMap.get(id);
		if (block != null) {
			return block;
		} else {
			return new int[] {mapUtil.getBlock("error"), NONE};
		}
	}
	
	//blockStateId = block.getIdFromBlock(block) + (block.getMetaFromState(state) << 12)
	public static void loadMaps() {
		chunkMap = new HashMap<Integer, int[]>();
		mapUtil = new MapUtil();
		chunkMap.put(0, new int[] {mapUtil.getBlock("air"), NONE}); //air
		mapUtil.newBlock("error");
		chunkMap.put(1, new int[] {mapUtil.newBlock("stone"), NONE});
		chunkMap.put(1 + (1<<12), new int[] {mapUtil.newBlock("granite"), NONE});
		chunkMap.put(1 + (2<<12), new int[] {mapUtil.newBlock("polished granite"), NONE});
		chunkMap.put(1 + (3<<12), new int[] {mapUtil.newBlock("diorite"), NONE});
		chunkMap.put(1 + (4<<12), new int[] {mapUtil.newBlock("polished diorite"), NONE});
		chunkMap.put(1 + (5<<12), new int[] {mapUtil.newBlock("andesite"), NONE});
		chunkMap.put(1 + (6<<12), new int[] {mapUtil.newBlock("polished andesite"), NONE});
		chunkMap.put(2, new int[] {mapUtil.newBlock("grass"), NONE});
		chunkMap.put(3, new int[] {mapUtil.newBlock("dirt"), NONE});
		chunkMap.put(3 + (1<<12), new int[] {mapUtil.newBlock("coarse dirt"), NONE});
		chunkMap.put(3 + (2<<12), new int[] {mapUtil.newBlock("podzol"), NONE});
		chunkMap.put(4, new int[] {mapUtil.newBlock("cobblestone"), NONE});
		chunkMap.put(5, new int[] {mapUtil.newBlock("oak wood planks"), NONE});
		chunkMap.put(5 + (1<<12), new int[] {mapUtil.newBlock("spruce wood planks"), NONE});
		chunkMap.put(5 + (2<<12), new int[] {mapUtil.newBlock("birch wood planks"), NONE});
		chunkMap.put(5 + (3<<12), new int[] {mapUtil.newBlock("jungle wood planks"), NONE});
		chunkMap.put(5 + (4<<12), new int[] {mapUtil.newBlock("acacia wood planks"), NONE});
		chunkMap.put(5 + (5<<12), new int[] {mapUtil.newBlock("dark oak wood planks"), NONE});
		chunkMap.put(6, new int[] {mapUtil.newBlock("oak sapling"), NONE});
		chunkMap.put(6 + (1<<12), new int[] {mapUtil.newBlock("spruce sapling"), NONE});
		chunkMap.put(6 + (2<<12), new int[] {mapUtil.newBlock("birch sapling"), NONE});
		chunkMap.put(6 + (3<<12), new int[] {mapUtil.newBlock("jungle sapling"), NONE});
		chunkMap.put(6 + (4<<12), new int[] {mapUtil.newBlock("acacia sapling"), NONE});
		chunkMap.put(6 + (5<<12), new int[] {mapUtil.newBlock("dark oak sapling"), NONE});
		chunkMap.put(6 + (8<<12), new int[] {mapUtil.getBlock("oak sapling"), NONE});
		chunkMap.put(6 + (9<<12), new int[] {mapUtil.getBlock("spruce sapling"), NONE});
		chunkMap.put(6 + (10<<12), new int[] {mapUtil.getBlock("birch sapling"), NONE});
		chunkMap.put(6 + (11<<12), new int[] {mapUtil.getBlock("jungle sapling"), NONE});
		chunkMap.put(6 + (12<<12), new int[] {mapUtil.getBlock("acacia sapling"), NONE});
		chunkMap.put(6 + (13<<12), new int[] {mapUtil.getBlock("dark oak sapling"), NONE});
		chunkMap.put(7, new int[] {mapUtil.newBlock("bedrock"), NONE});
		chunkMap.put(8, new int[] {mapUtil.newBlock("water16"), NONE});
		chunkMap.put(8 + (1<<12), new int[] {mapUtil.newBlock("water14"), NONE});
		chunkMap.put(8 + (2<<12), new int[] {mapUtil.newBlock("water12"), NONE});
		chunkMap.put(8 + (3<<12), new int[] {mapUtil.newBlock("water10"), NONE});
		chunkMap.put(8 + (4<<12), new int[] {mapUtil.newBlock("water08"), NONE});
		chunkMap.put(8 + (5<<12), new int[] {mapUtil.newBlock("water06"), NONE});
		chunkMap.put(8 + (6<<12), new int[] {mapUtil.newBlock("water04"), NONE});
		chunkMap.put(8 + (7<<12), new int[] {mapUtil.newBlock("water02"), NONE});
		chunkMap.put(9, new int[] {mapUtil.getBlock("water16"), NONE});
		chunkMap.put(9 + (1<<12), new int[] {mapUtil.getBlock("water14"), NONE});
		chunkMap.put(9 + (2<<12), new int[] {mapUtil.getBlock("water12"), NONE});
		chunkMap.put(9 + (3<<12), new int[] {mapUtil.getBlock("water10"), NONE});
		chunkMap.put(9 + (4<<12), new int[] {mapUtil.getBlock("water08"), NONE});
		chunkMap.put(9 + (5<<12), new int[] {mapUtil.getBlock("water06"), NONE});
		chunkMap.put(9 + (6<<12), new int[] {mapUtil.getBlock("water04"), NONE});
		chunkMap.put(9 + (7<<12), new int[] {mapUtil.getBlock("water02"), NONE});
		chunkMap.put(10, new int[] {mapUtil.newBlock("lava16"), NONE});
		chunkMap.put(10 + (1<<12), new int[] {mapUtil.newBlock("lava14"), NONE});
		chunkMap.put(10 + (2<<12), new int[] {mapUtil.newBlock("lava12"), NONE});
		chunkMap.put(10 + (3<<12), new int[] {mapUtil.newBlock("lava10"), NONE});
		chunkMap.put(10 + (4<<12), new int[] {mapUtil.newBlock("lava08"), NONE});
		chunkMap.put(10 + (5<<12), new int[] {mapUtil.newBlock("lava06"), NONE});
		chunkMap.put(10 + (6<<12), new int[] {mapUtil.newBlock("lava04"), NONE});
		chunkMap.put(10 + (7<<12), new int[] {mapUtil.newBlock("lava02"), NONE});
		chunkMap.put(11, new int[] {mapUtil.getBlock("lava16"), NONE});
		chunkMap.put(11 + (1<<12), new int[] {mapUtil.getBlock("lava14"), NONE});
		chunkMap.put(11 + (2<<12), new int[] {mapUtil.getBlock("lava12"), NONE});
		chunkMap.put(11 + (3<<12), new int[] {mapUtil.getBlock("lava10"), NONE});
		chunkMap.put(11 + (4<<12), new int[] {mapUtil.getBlock("lava08"), NONE});
		chunkMap.put(11 + (5<<12), new int[] {mapUtil.getBlock("lava06"), NONE});
		chunkMap.put(11 + (6<<12), new int[] {mapUtil.getBlock("lava04"), NONE});
		chunkMap.put(11 + (7<<12), new int[] {mapUtil.getBlock("lava02"), NONE});
		for (int i = 8; i < 16; i++) {
			chunkMap.put(8 + (i<<12), new int[] {mapUtil.getBlock("water16"), NONE});
			chunkMap.put(9 + (i<<12), new int[] {mapUtil.getBlock("water16"), NONE});
			chunkMap.put(10 + (i<<12), new int[] {mapUtil.getBlock("lava16"), NONE});
			chunkMap.put(11 + (i<<12), new int[] {mapUtil.getBlock("lava16"), NONE});
		}
		chunkMap.put(12, new int[] {mapUtil.newBlock("sand"), NONE});
		chunkMap.put(12 + (1<<12), new int[] {mapUtil.newBlock("red sand"), NONE});
		chunkMap.put(13, new int[] {mapUtil.newBlock("gravel"), NONE});
		chunkMap.put(14, new int[] {mapUtil.newBlock("gold ore"), NONE});
		chunkMap.put(15, new int[] {mapUtil.newBlock("iron ore"), NONE});
		chunkMap.put(16, new int[] {mapUtil.newBlock("coal ore"), NONE});
		chunkMap.put(17, new int[] {mapUtil.newBlock("oak wood"), NONE});
		chunkMap.put(17 + (1<<12), new int[] {mapUtil.newBlock("spruce wood"), NONE});
		chunkMap.put(17 + (2<<12), new int[] {mapUtil.newBlock("birch wood"), NONE});
		chunkMap.put(17 + (3<<12), new int[] {mapUtil.newBlock("jungle wood"), NONE});
		chunkMap.put(17 + (4<<12), new int[] {mapUtil.getBlock("oak wood"), RIGHT});
		chunkMap.put(17 + (5<<12), new int[] {mapUtil.getBlock("spruce wood"), RIGHT});
		chunkMap.put(17 + (6<<12), new int[] {mapUtil.getBlock("birch wood"), RIGHT});
		chunkMap.put(17 + (7<<12), new int[] {mapUtil.getBlock("jungle wood"), RIGHT});
		chunkMap.put(17 + (8<<12), new int[] {mapUtil.getBlock("oak wood"), DOWN});
		chunkMap.put(17 + (9<<12), new int[] {mapUtil.getBlock("spruce wood"), DOWN});
		chunkMap.put(17 + (10<<12), new int[] {mapUtil.getBlock("birch wood"), DOWN});
		chunkMap.put(17 + (11<<12), new int[] {mapUtil.getBlock("jungle wood"), DOWN});
		chunkMap.put(17 + (12<<12), new int[] {mapUtil.newBlock("oak bark"), NONE});
		chunkMap.put(17 + (13<<12), new int[] {mapUtil.newBlock("spruce bark"), NONE});
		chunkMap.put(17 + (14<<12), new int[] {mapUtil.newBlock("birch bark"), NONE});
		chunkMap.put(17 + (15<<12), new int[] {mapUtil.newBlock("jungle bark"), NONE});
		chunkMap.put(18, new int[] {mapUtil.newBlock("oak leaves"), NONE});
		chunkMap.put(18 + (1<<12), new int[] {mapUtil.newBlock("spruce leaves"), NONE});
		chunkMap.put(18 + (2<<12), new int[] {mapUtil.newBlock("birch leaves"), NONE});
		chunkMap.put(18 + (3<<12), new int[] {mapUtil.newBlock("jungle leaves"), NONE});
		for (int i = 4; i <= 12; i+=4) {
			chunkMap.put(18 + (i<<12), new int[] {mapUtil.getBlock("oak leaves"), NONE});
			chunkMap.put(18 + ((i+1)<<12), new int[] {mapUtil.getBlock("spruce leaves"), NONE});
			chunkMap.put(18 + ((i+2)<<12), new int[] {mapUtil.getBlock("birch leaves"), NONE});
			chunkMap.put(18 + ((i+3)<<12), new int[] {mapUtil.getBlock("jungle leaves"), NONE});
		}
		chunkMap.put(19, new int[] {mapUtil.newBlock("sponge"), NONE});
		chunkMap.put(19 + (1<<12), new int[] {mapUtil.newBlock("wet sponge"), NONE});
		chunkMap.put(20, new int[] {mapUtil.newBlock("glass"), NONE});
		chunkMap.put(21, new int[] {mapUtil.newBlock("lapis ore"), NONE});
		chunkMap.put(22, new int[] {mapUtil.newBlock("lapis block"), NONE});
		chunkMap.put(23, new int[] {mapUtil.newBlock("dispenser vertical"), DOWN});
		chunkMap.put(23 + (1<<12), new int[] {mapUtil.getBlock("dispenser vertical"), UP});
		chunkMap.put(23 + (2<<12), new int[] {mapUtil.newBlock("dispenser horizontal"), NORTH});
		chunkMap.put(23 + (3<<12), new int[] {mapUtil.getBlock("dispenser horizontal"), NONE});
		chunkMap.put(23 + (4<<12), new int[] {mapUtil.getBlock("dispenser horizontal"), WEST});
		chunkMap.put(23 + (5<<12), new int[] {mapUtil.getBlock("dispenser horizontal"), EAST});
		chunkMap.put(24, new int[] {mapUtil.newBlock("sandstone"), NONE});
		chunkMap.put(24 + (1<<12), new int[] {mapUtil.newBlock("chiseled sandstone"), NONE});
		chunkMap.put(24 + (2<<12), new int[] {mapUtil.newBlock("smooth sandstone"), NONE});
		chunkMap.put(25, new int[] {mapUtil.newBlock("note block"), NONE});
		chunkMap.put(26, new int[] {mapUtil.newBlock("bed feet"), NORTH});
		chunkMap.put(26 + (1<<12), new int[] {mapUtil.getBlock("bed feet"), EAST});
		chunkMap.put(26 + (2<<12), new int[] {mapUtil.getBlock("bed feet"), NONE});
		chunkMap.put(26 + (3<<12), new int[] {mapUtil.getBlock("bed feet"), WEST});
		chunkMap.put(26 + (4<<12), new int[] {mapUtil.getBlock("bed feet"), NORTH});
		chunkMap.put(26 + (5<<12), new int[] {mapUtil.getBlock("bed feet"), EAST});
		chunkMap.put(26 + (6<<12), new int[] {mapUtil.getBlock("bed feet"), NONE});
		chunkMap.put(26 + (7<<12), new int[] {mapUtil.getBlock("bed feet"), WEST});
		chunkMap.put(26 + (8<<12), new int[] {mapUtil.newBlock("bed head"), NORTH});
		chunkMap.put(26 + (9<<12), new int[] {mapUtil.getBlock("bed head"), EAST});
		chunkMap.put(26 + (10<<12), new int[] {mapUtil.getBlock("bed head"), NONE});
		chunkMap.put(26 + (11<<12), new int[] {mapUtil.getBlock("bed head"), WEST});
		chunkMap.put(26 + (12<<12), new int[] {mapUtil.getBlock("bed head"), NORTH});
		chunkMap.put(26 + (13<<12), new int[] {mapUtil.getBlock("bed head"), EAST});
		chunkMap.put(26 + (14<<12), new int[] {mapUtil.getBlock("bed head"), NONE});
		chunkMap.put(26 + (15<<12), new int[] {mapUtil.getBlock("bed head"), WEST});
		chunkMap.put(27, new int[] {mapUtil.newBlock("powered rail"), NONE});
		chunkMap.put(27 + (1<<12), new int[] {mapUtil.getBlock("powered rail"), WEST});
		chunkMap.put(27 + (2<<12), new int[] {mapUtil.newBlock("sloped powered rail"), WEST});
		chunkMap.put(27 + (3<<12), new int[] {mapUtil.getBlock("sloped powered rail"), EAST});
		chunkMap.put(27 + (4<<12), new int[] {mapUtil.getBlock("sloped powered rail"), NONE});
		chunkMap.put(27 + (5<<12), new int[] {mapUtil.getBlock("sloped powered rail"), NORTH});
		chunkMap.put(27 + (8<<12), new int[] {mapUtil.newBlock("activated powered rail"), NONE});
		chunkMap.put(27 + (9<<12), new int[] {mapUtil.getBlock("activated powered rail"), WEST});
		chunkMap.put(27 + (10<<12), new int[] {mapUtil.newBlock("activated sloped powered rail"), WEST});
		chunkMap.put(27 + (11<<12), new int[] {mapUtil.getBlock("activated sloped powered rail"), EAST});
		chunkMap.put(27 + (12<<12), new int[] {mapUtil.getBlock("activated sloped powered rail"), NONE});
		chunkMap.put(27 + (13<<12), new int[] {mapUtil.getBlock("activated sloped powered rail"), NORTH});
		chunkMap.put(28, new int[] {mapUtil.newBlock("detector rail"), NONE});
		chunkMap.put(28 + (1<<12), new int[] {mapUtil.getBlock("detector rail"), WEST});
		chunkMap.put(28 + (2<<12), new int[] {mapUtil.newBlock("sloped detector rail"), WEST});
		chunkMap.put(28 + (3<<12), new int[] {mapUtil.getBlock("sloped detector rail"), EAST});
		chunkMap.put(28 + (4<<12), new int[] {mapUtil.getBlock("sloped detector rail"), NONE});
		chunkMap.put(28 + (5<<12), new int[] {mapUtil.getBlock("sloped detector rail"), NORTH});
		chunkMap.put(28 + (8<<12), new int[] {mapUtil.newBlock("activated detector rail"), NONE});
		chunkMap.put(28 + (9<<12), new int[] {mapUtil.getBlock("activated detector rail"), WEST});
		chunkMap.put(28 + (10<<12), new int[] {mapUtil.newBlock("activated sloped detector rail"), WEST});
		chunkMap.put(28 + (11<<12), new int[] {mapUtil.getBlock("activated sloped detector rail"), EAST});
		chunkMap.put(28 + (12<<12), new int[] {mapUtil.getBlock("activated sloped detector rail"), NONE});
		chunkMap.put(28 + (13<<12), new int[] {mapUtil.getBlock("activated sloped detector rail"), NORTH});
		chunkMap.put(29, new int[] {mapUtil.newBlock("sticky piston retracted"), DOWN});
		chunkMap.put(29 + (1<<12), new int[] {mapUtil.getBlock("sticky piston retracted"), UP});
		chunkMap.put(29 + (2<<12), new int[] {mapUtil.getBlock("sticky piston retracted"), NORTH});
		chunkMap.put(29 + (3<<12), new int[] {mapUtil.getBlock("sticky piston retracted"), NONE});
		chunkMap.put(29 + (4<<12), new int[] {mapUtil.getBlock("sticky piston retracted"), WEST});
		chunkMap.put(29 + (5<<12), new int[] {mapUtil.getBlock("sticky piston retracted"), EAST});
		chunkMap.put(29 + (8<<12), new int[] {mapUtil.newBlock("piston extended"), DOWN});
		chunkMap.put(29 + (9<<12), new int[] {mapUtil.getBlock("piston extended"), UP});
		chunkMap.put(29 + (10<<12), new int[] {mapUtil.getBlock("piston extended"), NORTH});
		chunkMap.put(29 + (11<<12), new int[] {mapUtil.getBlock("piston extended"), NONE});
		chunkMap.put(29 + (12<<12), new int[] {mapUtil.getBlock("piston extended"), WEST});
		chunkMap.put(29 + (13<<12), new int[] {mapUtil.getBlock("piston extended"), EAST});
		chunkMap.put(30, new int[] {mapUtil.newBlock("cobweb"), NONE});
		chunkMap.put(31, new int[] {mapUtil.newBlock("shrub"), NONE});
		chunkMap.put(31 + (1<<12), new int[] {mapUtil.newBlock("tall grass"), NONE});
		chunkMap.put(31 + (2<<12), new int[] {mapUtil.newBlock("fern"), NONE});
		chunkMap.put(32, new int[] {mapUtil.newBlock("dead bush"), NONE});
		chunkMap.put(33, new int[] {mapUtil.newBlock("piston retracted"), DOWN});
		chunkMap.put(33 + (1<<12), new int[] {mapUtil.getBlock("piston retracted"), UP});
		chunkMap.put(33 + (2<<12), new int[] {mapUtil.getBlock("piston retracted"), NORTH});
		chunkMap.put(33 + (3<<12), new int[] {mapUtil.getBlock("piston retracted"), NONE});
		chunkMap.put(33 + (4<<12), new int[] {mapUtil.getBlock("piston retracted"), WEST});
		chunkMap.put(33 + (5<<12), new int[] {mapUtil.getBlock("piston retracted"), EAST});
		chunkMap.put(33 + (8<<12), new int[] {mapUtil.getBlock("piston extended"), DOWN});
		chunkMap.put(33 + (9<<12), new int[] {mapUtil.getBlock("piston extended"), UP});
		chunkMap.put(33 + (10<<12), new int[] {mapUtil.getBlock("piston extended"), NORTH});
		chunkMap.put(33 + (11<<12), new int[] {mapUtil.getBlock("piston extended"), NONE});
		chunkMap.put(33 + (12<<12), new int[] {mapUtil.getBlock("piston extended"), WEST});
		chunkMap.put(33 + (13<<12), new int[] {mapUtil.getBlock("piston extended"), EAST});
		chunkMap.put(34, new int[] {mapUtil.newBlock("piston head"), DOWN});
		chunkMap.put(34 + (1<<12), new int[] {mapUtil.getBlock("piston head"), UP});
		chunkMap.put(34 + (2<<12), new int[] {mapUtil.getBlock("piston head"), NORTH});
		chunkMap.put(34 + (3<<12), new int[] {mapUtil.getBlock("piston head"), NONE});
		chunkMap.put(34 + (4<<12), new int[] {mapUtil.getBlock("piston head"), WEST});
		chunkMap.put(34 + (5<<12), new int[] {mapUtil.getBlock("piston head"), EAST});
		chunkMap.put(34 + (8<<12), new int[] {mapUtil.newBlock("sticky piston head"), DOWN});
		chunkMap.put(34 + (9<<12), new int[] {mapUtil.getBlock("sticky piston head"), UP});
		chunkMap.put(34 + (10<<12), new int[] {mapUtil.getBlock("sticky piston head"), NORTH});
		chunkMap.put(34 + (11<<12), new int[] {mapUtil.getBlock("sticky piston head"), NONE});
		chunkMap.put(34 + (12<<12), new int[] {mapUtil.getBlock("sticky piston head"), WEST});
		chunkMap.put(34 + (13<<12), new int[] {mapUtil.getBlock("sticky piston head"), EAST});
		chunkMap.put(35, new int[] {mapUtil.newBlock("white wool"), NONE});
		chunkMap.put(35 + (1<<12), new int[] {mapUtil.newBlock("orange wool"), NONE});
		chunkMap.put(35 + (2<<12), new int[] {mapUtil.newBlock("magenta wool"), NONE});
		chunkMap.put(35 + (3<<12), new int[] {mapUtil.newBlock("light blue wool"), NONE});
		chunkMap.put(35 + (4<<12), new int[] {mapUtil.newBlock("yellow wool"), NONE});
		chunkMap.put(35 + (5<<12), new int[] {mapUtil.newBlock("lime wool"), NONE});
		chunkMap.put(35 + (6<<12), new int[] {mapUtil.newBlock("pink wool"), NONE});
		chunkMap.put(35 + (7<<12), new int[] {mapUtil.newBlock("gray wool"), NONE});
		chunkMap.put(35 + (8<<12), new int[] {mapUtil.newBlock("light gray wool"), NONE});
		chunkMap.put(35 + (9<<12), new int[] {mapUtil.newBlock("cyan wool"), NONE});
		chunkMap.put(35 + (10<<12), new int[] {mapUtil.newBlock("purple wool"), NONE});
		chunkMap.put(35 + (11<<12), new int[] {mapUtil.newBlock("blue wool"), NONE});
		chunkMap.put(35 + (12<<12), new int[] {mapUtil.newBlock("brown wool"), NONE});
		chunkMap.put(35 + (13<<12), new int[] {mapUtil.newBlock("green wool"), NONE});
		chunkMap.put(35 + (14<<12), new int[] {mapUtil.newBlock("red wool"), NONE});
		chunkMap.put(35 + (15<<12), new int[] {mapUtil.newBlock("black wool"), NONE});
		chunkMap.put(37, new int[] {mapUtil.newBlock("dandelion"), NONE});
		chunkMap.put(38, new int[] {mapUtil.newBlock("poppy"), NONE});
		chunkMap.put(38 + (1<<12), new int[] {mapUtil.newBlock("blue orchid"), NONE});
		chunkMap.put(38 + (2<<12), new int[] {mapUtil.newBlock("allium"), NONE});
		chunkMap.put(38 + (3<<12), new int[] {mapUtil.newBlock("azure bluet"), NONE});
		chunkMap.put(38 + (4<<12), new int[] {mapUtil.newBlock("red tulip"), NONE});
		chunkMap.put(38 + (5<<12), new int[] {mapUtil.newBlock("orange tulip"), NONE});
		chunkMap.put(38 + (6<<12), new int[] {mapUtil.newBlock("white tulip"), NONE});
		chunkMap.put(38 + (7<<12), new int[] {mapUtil.newBlock("pink tulip"), NONE});
		chunkMap.put(38 + (8<<12), new int[] {mapUtil.newBlock("oxeye daisy"), NONE});
		chunkMap.put(39, new int[] {mapUtil.newBlock("brown mushroom"), NONE});
		chunkMap.put(40, new int[] {mapUtil.newBlock("red mushroom"), NONE});
		chunkMap.put(41, new int[] {mapUtil.newBlock("gold block"), NONE});
		chunkMap.put(42, new int[] {mapUtil.newBlock("iron block"), NONE});
		chunkMap.put(43, new int[] {mapUtil.newBlock("double stone slab"), NONE});
		chunkMap.put(43 + (1<<12), new int[] {mapUtil.getBlock("sandstone"), NONE});
		chunkMap.put(43 + (2<<12), new int[] {mapUtil.getBlock("oak wood planks"), NONE});
		chunkMap.put(43 + (3<<12), new int[] {mapUtil.getBlock("cobblestone"), NONE});
		chunkMap.put(43 + (4<<12), new int[] {mapUtil.newBlock("bricks"), NONE});
		chunkMap.put(43 + (5<<12), new int[] {mapUtil.newBlock("stone brick"), NONE});
		chunkMap.put(43 + (6<<12), new int[] {mapUtil.newBlock("nether brick"), NONE});
		chunkMap.put(43 + (7<<12), new int[] {mapUtil.newBlock("quartz"), NONE});
		chunkMap.put(43 + (8<<12), new int[] {mapUtil.newBlock("smooth double stone slab"), NONE});
		chunkMap.put(43 + (9<<12), new int[] {mapUtil.newBlock("smooth double sandstone slab"), NONE});
		chunkMap.put(43 + (15<<12), new int[] {mapUtil.newBlock("smooth quartz slab"), NONE});
		//TODO slabs
		chunkMap.put(45, new int[] {mapUtil.getBlock("bricks"), NONE});
		chunkMap.put(46, new int[] {mapUtil.newBlock("tnt"), NONE});
		chunkMap.put(47, new int[] {mapUtil.newBlock("bookshelf"), NONE});
		chunkMap.put(48, new int[] {mapUtil.newBlock("mossy cobblestone"), NONE});
		chunkMap.put(49, new int[] {mapUtil.newBlock("obsidian"), NONE});
		chunkMap.put(50 + (1<<12), new int[] {mapUtil.newBlock("torch wall"), EAST});
		chunkMap.put(50 + (2<<12), new int[] {mapUtil.getBlock("torch wall"), WEST});
		chunkMap.put(50 + (3<<12), new int[] {mapUtil.getBlock("torch wall"), NONE});
		chunkMap.put(50 + (4<<12), new int[] {mapUtil.getBlock("torch wall"), NORTH});
		chunkMap.put(50 + (5<<12), new int[] {mapUtil.newBlock("torch floor"), NONE});
		chunkMap.put(51, new int[] {mapUtil.newBlock("fire"), NONE});
		chunkMap.put(51 + (1<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (2<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (3<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (4<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (5<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (6<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (7<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (8<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (9<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (10<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (11<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (12<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (13<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (14<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(51 + (15<<12), new int[] {mapUtil.getBlock("fire"), NONE});
		chunkMap.put(52, new int[] {mapUtil.newBlock("mob spawner"), NONE});
		chunkMap.put(53, new int[] {mapUtil.newBlock("oak stairs bottom"), WEST});
		chunkMap.put(53 + (1<<12), new int[] {mapUtil.getBlock("oak stairs bottom"), EAST});
		chunkMap.put(53 + (2<<12), new int[] {mapUtil.getBlock("oak stairs bottom"), NORTH});
		chunkMap.put(53 + (3<<12), new int[] {mapUtil.getBlock("oak stairs bottom"), NONE});
		chunkMap.put(53 + (4<<12), new int[] {mapUtil.newBlock("oak stairs top"), WEST});
		chunkMap.put(53 + (5<<12), new int[] {mapUtil.getBlock("oak stairs top"), EAST});
		chunkMap.put(53 + (6<<12), new int[] {mapUtil.getBlock("oak stairs top"), NORTH});
		chunkMap.put(53 + (7<<12), new int[] {mapUtil.getBlock("oak stairs top"), NONE});
		//TODO chest?, redstone wire
		chunkMap.put(56, new int[] {mapUtil.newBlock("diamond ore"), NONE});
		chunkMap.put(57, new int[] {mapUtil.newBlock("diamond block"), NONE});
		chunkMap.put(58, new int[] {mapUtil.newBlock("crafting table"), NONE});
		//TODO wheat
		chunkMap.put(60, new int[] {mapUtil.newBlock("farmland dry"), NONE});
		chunkMap.put(60 + (1<<12), new int[] {mapUtil.getBlock("farmland dry"), NONE});
		chunkMap.put(60 + (2<<12), new int[] {mapUtil.getBlock("farmland dry"), NONE});
		chunkMap.put(60 + (3<<12), new int[] {mapUtil.getBlock("farmland dry"), NONE});
		chunkMap.put(60 + (4<<12), new int[] {mapUtil.getBlock("farmland dry"), NONE});
		chunkMap.put(60 + (5<<12), new int[] {mapUtil.getBlock("farmland dry"), NONE});
		chunkMap.put(60 + (6<<12), new int[] {mapUtil.getBlock("farmland dry"), NONE});
		chunkMap.put(60 + (7<<12), new int[] {mapUtil.newBlock("farmland wet"), NONE});
		chunkMap.put(61 + (2<<12), new int[] {mapUtil.newBlock("furnace"), NORTH});
		chunkMap.put(61 + (3<<12), new int[] {mapUtil.getBlock("furnace"), NONE});
		chunkMap.put(61 + (4<<12), new int[] {mapUtil.getBlock("furnace"), WEST});
		chunkMap.put(61 + (5<<12), new int[] {mapUtil.getBlock("furnace"), EAST});
		chunkMap.put(62 + (2<<12), new int[] {mapUtil.newBlock("furnace on"), NORTH});
		chunkMap.put(62 + (3<<12), new int[] {mapUtil.getBlock("furnace on"), NONE});
		chunkMap.put(62 + (4<<12), new int[] {mapUtil.getBlock("furnace on"), WEST});
		chunkMap.put(62 + (5<<12), new int[] {mapUtil.getBlock("furnace on"), EAST});
		//TODO standing sign
		//rotation is added later
		chunkMap.put(64, new int[] {mapUtil.newBlock("oak door lower"), NONE});
		chunkMap.put(64 + (1<<12), new int[] {mapUtil.getBlock("oak door lower"), NONE});
		chunkMap.put(64 + (2<<12), new int[] {mapUtil.getBlock("oak door lower"), NONE});
		chunkMap.put(64 + (3<<12), new int[] {mapUtil.getBlock("oak door lower"), NONE});
		chunkMap.put(64 + (4<<12), new int[] {mapUtil.getBlock("oak door lower"), NONE});
		chunkMap.put(64 + (5<<12), new int[] {mapUtil.getBlock("oak door lower"), NONE});
		chunkMap.put(64 + (6<<12), new int[] {mapUtil.getBlock("oak door lower"), NONE});
		chunkMap.put(64 + (7<<12), new int[] {mapUtil.getBlock("oak door lower"), NONE});
		chunkMap.put(64 + (8<<12), new int[] {mapUtil.newBlock("oak door upper"), NONE});
		chunkMap.put(64 + (9<<12), new int[] {mapUtil.getBlock("oak door upper"), NONE});
		chunkMap.put(64 + (10<<12), new int[] {mapUtil.getBlock("oak door upper"), NONE});
		chunkMap.put(64 + (11<<12), new int[] {mapUtil.getBlock("oak door upper"), NONE});
		chunkMap.put(65 + (2<<12), new int[] {mapUtil.newBlock("ladder"), NORTH});
		chunkMap.put(65 + (3<<12), new int[] {mapUtil.getBlock("ladder"), NONE});
		chunkMap.put(65 + (4<<12), new int[] {mapUtil.getBlock("ladder"), WEST});
		chunkMap.put(65 + (5<<12), new int[] {mapUtil.getBlock("ladder"), EAST});
		chunkMap.put(66, new int[] {mapUtil.newBlock("rail straight"), NONE});
		chunkMap.put(66 + (1<<12), new int[] {mapUtil.getBlock("rail straight"), WEST});
		chunkMap.put(66 + (2<<12), new int[] {mapUtil.newBlock("rail sloped"), WEST});
		chunkMap.put(66 + (3<<12), new int[] {mapUtil.getBlock("rail sloped"), EAST});
		chunkMap.put(66 + (4<<12), new int[] {mapUtil.getBlock("rail sloped"), NONE});
		chunkMap.put(66 + (5<<12), new int[] {mapUtil.getBlock("rail sloped"), NORTH});
		chunkMap.put(66 + (6<<12), new int[] {mapUtil.newBlock("rail curved"), WEST});
		chunkMap.put(66 + (7<<12), new int[] {mapUtil.getBlock("rail curved"), NORTH});
		chunkMap.put(66 + (8<<12), new int[] {mapUtil.getBlock("rail curved"), EAST});
		chunkMap.put(66 + (9<<12), new int[] {mapUtil.getBlock("rail curved"), NONE});
		chunkMap.put(67, new int[] {mapUtil.newBlock("cobblestone stairs bottom"), WEST});
		chunkMap.put(67 + (1<<12), new int[] {mapUtil.getBlock("cobblestone stairs bottom"), EAST});
		chunkMap.put(67 + (2<<12), new int[] {mapUtil.getBlock("cobblestone stairs bottom"), NORTH});
		chunkMap.put(67 + (3<<12), new int[] {mapUtil.getBlock("cobblestone stairs bottom"), NONE});
		chunkMap.put(67 + (4<<12), new int[] {mapUtil.newBlock("cobblestone stairs top"), WEST});
		chunkMap.put(67 + (5<<12), new int[] {mapUtil.getBlock("cobblestone stairs top"), EAST});
		chunkMap.put(67 + (6<<12), new int[] {mapUtil.getBlock("cobblestone stairs top"), NORTH});
		chunkMap.put(67 + (7<<12), new int[] {mapUtil.getBlock("cobblestone stairs top"), NONE});
		chunkMap.put(68 + (2<<12), new int[] {mapUtil.newBlock("wall sign"), NORTH});
		chunkMap.put(68 + (3<<12), new int[] {mapUtil.getBlock("wall sign"), NONE});
		chunkMap.put(68 + (4<<12), new int[] {mapUtil.getBlock("wall sign"), WEST});
		chunkMap.put(68 + (5<<12), new int[] {mapUtil.getBlock("wall sign"), EAST});
		chunkMap.put(69, new int[] {mapUtil.newBlock("lever off"), DOWN|RIGHT});
		chunkMap.put(69 + (1<<12), new int[] {mapUtil.getBlock("lever off"), EAST});
		chunkMap.put(69 + (2<<12), new int[] {mapUtil.getBlock("lever off"), WEST});
		chunkMap.put(69 + (3<<12), new int[] {mapUtil.getBlock("lever off"), NONE});
		chunkMap.put(69 + (4<<12), new int[] {mapUtil.getBlock("lever off"), NORTH});
		chunkMap.put(69 + (5<<12), new int[] {mapUtil.getBlock("lever off"), UP|OVER});
		chunkMap.put(69 + (6<<12), new int[] {mapUtil.getBlock("lever off"), UP|RIGHT});
		chunkMap.put(69 + (7<<12), new int[] {mapUtil.getBlock("lever off"), DOWN});
		chunkMap.put(69 + (8<<12), new int[] {mapUtil.newBlock("lever on"), DOWN|RIGHT});
		chunkMap.put(69 + (9<<12), new int[] {mapUtil.getBlock("lever on"), EAST});
		chunkMap.put(69 + (10<<12), new int[] {mapUtil.getBlock("lever on"), WEST});
		chunkMap.put(69 + (11<<12), new int[] {mapUtil.getBlock("lever on"), NONE});
		chunkMap.put(69 + (12<<12), new int[] {mapUtil.getBlock("lever on"), NORTH});
		chunkMap.put(69 + (13<<12), new int[] {mapUtil.getBlock("lever on"), UP|OVER});
		chunkMap.put(69 + (14<<12), new int[] {mapUtil.getBlock("lever on"), UP|RIGHT});
		chunkMap.put(69 + (15<<12), new int[] {mapUtil.getBlock("lever on"), DOWN});
		chunkMap.put(70, new int[] {mapUtil.newBlock("stone pressure plate"), NONE});
		chunkMap.put(70 + (1<<12), new int[] {mapUtil.getBlock("stone pressure plate"), NONE});
		chunkMap.put(71, new int[] {mapUtil.newBlock("iron door lower"), NONE});
		chunkMap.put(71 + (1<<12), new int[] {mapUtil.getBlock("iron door lower"), NONE});
		chunkMap.put(71 + (2<<12), new int[] {mapUtil.getBlock("iron door lower"), NONE});
		chunkMap.put(71 + (3<<12), new int[] {mapUtil.getBlock("iron door lower"), NONE});
		chunkMap.put(71 + (4<<12), new int[] {mapUtil.getBlock("iron door lower"), NONE});
		chunkMap.put(71 + (5<<12), new int[] {mapUtil.getBlock("iron door lower"), NONE});
		chunkMap.put(71 + (6<<12), new int[] {mapUtil.getBlock("iron door lower"), NONE});
		chunkMap.put(71 + (7<<12), new int[] {mapUtil.getBlock("iron door lower"), NONE});
		chunkMap.put(71 + (8<<12), new int[] {mapUtil.newBlock("iron door upper"), NONE});
		chunkMap.put(71 + (9<<12), new int[] {mapUtil.getBlock("iron door upper"), NONE});
		chunkMap.put(71 + (10<<12), new int[] {mapUtil.getBlock("iron door upper"), NONE});
		chunkMap.put(71 + (11<<12), new int[] {mapUtil.getBlock("iron door upper"), NONE});
		chunkMap.put(72, new int[] {mapUtil.newBlock("wooden pressure plate"), NONE});
		chunkMap.put(72 + (1<<12), new int[] {mapUtil.getBlock("wooden pressure plate"), NONE});
		chunkMap.put(73, new int[] {mapUtil.newBlock("redstone ore"), NONE});
		chunkMap.put(74, new int[] {mapUtil.getBlock("redstone ore"), NONE});
		chunkMap.put(75 + (1<<12), new int[] {mapUtil.newBlock("redstone torch wall off"), EAST});
		chunkMap.put(75 + (2<<12), new int[] {mapUtil.getBlock("redstone torch wall off"), WEST});
		chunkMap.put(75 + (3<<12), new int[] {mapUtil.getBlock("redstone torch wall off"), NONE});
		chunkMap.put(75 + (4<<12), new int[] {mapUtil.getBlock("redstone torch wall off"), NORTH});
		chunkMap.put(75 + (5<<12), new int[] {mapUtil.newBlock("redstone torch floor off"), NONE});
		chunkMap.put(76 + (1<<12), new int[] {mapUtil.newBlock("redstone torch wall on"), EAST});
		chunkMap.put(76 + (2<<12), new int[] {mapUtil.getBlock("redstone torch wall on"), WEST});
		chunkMap.put(76 + (3<<12), new int[] {mapUtil.getBlock("redstone torch wall on"), NONE});
		chunkMap.put(76 + (4<<12), new int[] {mapUtil.getBlock("redstone torch wall on"), NORTH});
		chunkMap.put(76 + (5<<12), new int[] {mapUtil.newBlock("redstone torch floor on"), NONE});
		chunkMap.put(77, new int[] {mapUtil.newBlock("stone button off"), DOWN});
		chunkMap.put(77 + (1<<12), new int[] {mapUtil.getBlock("stone button off"), EAST});
		chunkMap.put(77 + (2<<12), new int[] {mapUtil.getBlock("stone button off"), WEST});
		chunkMap.put(77 + (3<<12), new int[] {mapUtil.getBlock("stone button off"), NONE});
		chunkMap.put(77 + (4<<12), new int[] {mapUtil.getBlock("stone button off"), NORTH});
		chunkMap.put(77 + (5<<12), new int[] {mapUtil.getBlock("stone button off"), UP});
		chunkMap.put(77 + (8<<12), new int[] {mapUtil.newBlock("stone button on"), DOWN});
		chunkMap.put(77 + (9<<12), new int[] {mapUtil.getBlock("stone button on"), EAST});
		chunkMap.put(77 + (10<<12), new int[] {mapUtil.getBlock("stone button on"), WEST});
		chunkMap.put(77 + (11<<12), new int[] {mapUtil.getBlock("stone button on"), NONE});
		chunkMap.put(77 + (12<<12), new int[] {mapUtil.getBlock("stone button on"), NORTH});
		chunkMap.put(77 + (13<<12), new int[] {mapUtil.getBlock("stone button on"), UP});
		chunkMap.put(78, new int[] {mapUtil.newBlock("snow02"), NONE});
		chunkMap.put(78 + (1<<12), new int[] {mapUtil.newBlock("snow04"), NONE});
		chunkMap.put(78 + (2<<12), new int[] {mapUtil.newBlock("snow06"), NONE});
		chunkMap.put(78 + (3<<12), new int[] {mapUtil.newBlock("snow08"), NONE});
		chunkMap.put(78 + (4<<12), new int[] {mapUtil.newBlock("snow10"), NONE});
		chunkMap.put(78 + (5<<12), new int[] {mapUtil.newBlock("snow12"), NONE});
		chunkMap.put(78 + (6<<12), new int[] {mapUtil.newBlock("snow14"), NONE});
		chunkMap.put(78 + (7<<12), new int[] {mapUtil.newBlock("snow16"), NONE});
		chunkMap.put(79, new int[] {mapUtil.newBlock("ice"), NONE});
		chunkMap.put(80, new int[] {mapUtil.newBlock("snow"), NONE});
		chunkMap.put(81, new int[] {mapUtil.newBlock("cactus"), NONE});
		for (int i = 1; i < 16; i++) {
			chunkMap.put(81 + (i<<12), new int[] {mapUtil.getBlock("cactus"), NONE});
		}
		chunkMap.put(82, new int[] {mapUtil.newBlock("clay"), NONE});
		chunkMap.put(83, new int[] {mapUtil.newBlock("sugar cane"), NONE});
		for (int i = 1; i < 16; i++) {
			chunkMap.put(83 + (i<<12), new int[] {mapUtil.getBlock("sugar cane"), NONE});
		}
		chunkMap.put(84, new int[] {mapUtil.newBlock("jukebox"), NONE});
		chunkMap.put(84 + (1<<12), new int[] {mapUtil.getBlock("jukebox"), NONE});
		//TODO fence
		chunkMap.put(86, new int[] {mapUtil.newBlock("pumpkin"), NONE});
		chunkMap.put(86 + (1<<12), new int[] {mapUtil.getBlock("pumpkin"), WEST});
		chunkMap.put(86 + (2<<12), new int[] {mapUtil.getBlock("pumpkin"), NORTH});
		chunkMap.put(86 + (3<<12), new int[] {mapUtil.getBlock("pumpkin"), EAST});
		chunkMap.put(86 + (4<<12), new int[] {mapUtil.newBlock("pumpkin no face"), NONE});
		chunkMap.put(86 + (5<<12), new int[] {mapUtil.getBlock("pumpkin no face"), WEST});
		chunkMap.put(86 + (6<<12), new int[] {mapUtil.getBlock("pumpkin no face"), NORTH});
		chunkMap.put(86 + (7<<12), new int[] {mapUtil.getBlock("pumpkin no face"), EAST});
		chunkMap.put(87, new int[] {mapUtil.newBlock("netherrack"), NONE});
		chunkMap.put(88, new int[] {mapUtil.newBlock("soul sand"), NONE});
		chunkMap.put(89, new int[] {mapUtil.newBlock("glowstone"), NONE});
		//TODO nether portal
		chunkMap.put(91, new int[] {mapUtil.newBlock("jack o'lantern"), NONE});
		chunkMap.put(91 + (1<<12), new int[] {mapUtil.getBlock("jack o'lantern"), WEST});
		chunkMap.put(91 + (2<<12), new int[] {mapUtil.getBlock("jack o'lantern"), NORTH});
		chunkMap.put(91 + (3<<12), new int[] {mapUtil.getBlock("jack o'lantern"), EAST});
		chunkMap.put(91 + (4<<12), new int[] {mapUtil.getBlock("pumpkin no face"), NONE});
		chunkMap.put(91 + (5<<12), new int[] {mapUtil.getBlock("pumpkin no face"), WEST});
		chunkMap.put(91 + (6<<12), new int[] {mapUtil.getBlock("pumpkin no face"), NORTH});
		chunkMap.put(91 + (7<<12), new int[] {mapUtil.getBlock("pumpkin no face"), EAST});
		chunkMap.put(92, new int[] {mapUtil.newBlock("cake 0"), NONE});
		chunkMap.put(92 + (1<<12), new int[] {mapUtil.newBlock("cake 1"), NONE});
		chunkMap.put(92 + (2<<12), new int[] {mapUtil.newBlock("cake 2"), NONE});
		chunkMap.put(92 + (3<<12), new int[] {mapUtil.newBlock("cake 3"), NONE});
		chunkMap.put(92 + (4<<12), new int[] {mapUtil.newBlock("cake 4"), NONE});
		chunkMap.put(92 + (5<<12), new int[] {mapUtil.newBlock("cake 5"), NONE});
		chunkMap.put(92 + (6<<12), new int[] {mapUtil.newBlock("cake 6"), NONE});
		chunkMap.put(93, new int[] {mapUtil.newBlock("repeater off 1"), NORTH});
		chunkMap.put(93 + (1<<12), new int[] {mapUtil.getBlock("repeater off 1"), EAST});
		chunkMap.put(93 + (2<<12), new int[] {mapUtil.getBlock("repeater off 1"), NONE});
		chunkMap.put(93 + (3<<12), new int[] {mapUtil.getBlock("repeater off 1"), WEST});
		chunkMap.put(93 + (4<<12), new int[] {mapUtil.newBlock("repeater off 2"), NORTH});
		chunkMap.put(93 + (5<<12), new int[] {mapUtil.getBlock("repeater off 2"), EAST});
		chunkMap.put(93 + (6<<12), new int[] {mapUtil.getBlock("repeater off 2"), NONE});
		chunkMap.put(93 + (7<<12), new int[] {mapUtil.getBlock("repeater off 2"), WEST});
		chunkMap.put(93 + (8<<12), new int[] {mapUtil.newBlock("repeater off 3"), NORTH});
		chunkMap.put(93 + (9<<12), new int[] {mapUtil.getBlock("repeater off 3"), EAST});
		chunkMap.put(93 + (10<<12), new int[] {mapUtil.getBlock("repeater off 3"), NONE});
		chunkMap.put(93 + (11<<12), new int[] {mapUtil.getBlock("repeater off 3"), WEST});
		chunkMap.put(93 + (12<<12), new int[] {mapUtil.newBlock("repeater off 4"), NORTH});
		chunkMap.put(93 + (13<<12), new int[] {mapUtil.getBlock("repeater off 4"), EAST});
		chunkMap.put(93 + (14<<12), new int[] {mapUtil.getBlock("repeater off 4"), NONE});
		chunkMap.put(93 + (15<<12), new int[] {mapUtil.getBlock("repeater off 4"), WEST});
		chunkMap.put(94, new int[] {mapUtil.newBlock("repeater on 1"), NORTH});
		chunkMap.put(94 + (1<<12), new int[] {mapUtil.getBlock("repeater on 1"), EAST});
		chunkMap.put(94 + (2<<12), new int[] {mapUtil.getBlock("repeater on 1"), NONE});
		chunkMap.put(94 + (3<<12), new int[] {mapUtil.getBlock("repeater on 1"), WEST});
		chunkMap.put(94 + (4<<12), new int[] {mapUtil.newBlock("repeater on 2"), NORTH});
		chunkMap.put(94 + (5<<12), new int[] {mapUtil.getBlock("repeater on 2"), EAST});
		chunkMap.put(94 + (6<<12), new int[] {mapUtil.getBlock("repeater on 2"), NONE});
		chunkMap.put(94 + (7<<12), new int[] {mapUtil.getBlock("repeater on 2"), WEST});
		chunkMap.put(94 + (8<<12), new int[] {mapUtil.newBlock("repeater on 3"), NORTH});
		chunkMap.put(94 + (9<<12), new int[] {mapUtil.getBlock("repeater on 3"), EAST});
		chunkMap.put(94 + (10<<12), new int[] {mapUtil.getBlock("repeater on 3"), NONE});
		chunkMap.put(94 + (11<<12), new int[] {mapUtil.getBlock("repeater on 3"), WEST});
		chunkMap.put(94 + (12<<12), new int[] {mapUtil.newBlock("repeater on 4"), NORTH});
		chunkMap.put(94 + (13<<12), new int[] {mapUtil.getBlock("repeater on 4"), EAST});
		chunkMap.put(94 + (14<<12), new int[] {mapUtil.getBlock("repeater on 4"), NONE});
		chunkMap.put(94 + (15<<12), new int[] {mapUtil.getBlock("repeater on 4"), WEST});
		chunkMap.put(95, new int[] {mapUtil.newBlock("white stained glass"), NONE});
		chunkMap.put(95 + (1<<12), new int[] {mapUtil.newBlock("orange stained glass"), NONE});
		chunkMap.put(95 + (2<<12), new int[] {mapUtil.newBlock("magenta stained glass"), NONE});
		chunkMap.put(95 + (3<<12), new int[] {mapUtil.newBlock("light blue stained glass"), NONE});
		chunkMap.put(95 + (4<<12), new int[] {mapUtil.newBlock("yellow stained glass"), NONE});
		chunkMap.put(95 + (5<<12), new int[] {mapUtil.newBlock("lime stained glass"), NONE});
		chunkMap.put(95 + (6<<12), new int[] {mapUtil.newBlock("pink stained glass"), NONE});
		chunkMap.put(95 + (7<<12), new int[] {mapUtil.newBlock("gray stained glass"), NONE});
		chunkMap.put(95 + (8<<12), new int[] {mapUtil.newBlock("light gray stained glass"), NONE});
		chunkMap.put(95 + (9<<12), new int[] {mapUtil.newBlock("cyan stained glass"), NONE});
		chunkMap.put(95 + (10<<12), new int[] {mapUtil.newBlock("purple stained glass"), NONE});
		chunkMap.put(95 + (11<<12), new int[] {mapUtil.newBlock("blue stained glass"), NONE});
		chunkMap.put(95 + (12<<12), new int[] {mapUtil.newBlock("brown stained glass"), NONE});
		chunkMap.put(95 + (13<<12), new int[] {mapUtil.newBlock("green stained glass"), NONE});
		chunkMap.put(95 + (14<<12), new int[] {mapUtil.newBlock("red stained glass"), NONE});
		chunkMap.put(95 + (15<<12), new int[] {mapUtil.newBlock("black stained glass"), NONE});
		chunkMap.put(96, new int[] {mapUtil.newBlock("trapdoor"), NONE});
		chunkMap.put(96 + (1<<12), new int[] {mapUtil.getBlock("trapdoor"), NORTH});
		chunkMap.put(96 + (2<<12), new int[] {mapUtil.getBlock("trapdoor"), EAST});
		chunkMap.put(96 + (3<<12), new int[] {mapUtil.getBlock("trapdoor"), WEST});
		chunkMap.put(96 + (4<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN|OVER});
		chunkMap.put(96 + (5<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN});
		chunkMap.put(96 + (6<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN|LEFT});
		chunkMap.put(96 + (7<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN|RIGHT});
		chunkMap.put(96 + (8<<12), new int[] {mapUtil.getBlock("trapdoor"), OVER});
		chunkMap.put(96 + (9<<12), new int[] {mapUtil.getBlock("trapdoor"), NORTH|OVER});
		chunkMap.put(96 + (10<<12), new int[] {mapUtil.getBlock("trapdoor"), EAST|OVER});
		chunkMap.put(96 + (11<<12), new int[] {mapUtil.getBlock("trapdoor"), WEST|OVER});
		chunkMap.put(96 + (12<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN|OVER});
		chunkMap.put(96 + (13<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN});
		chunkMap.put(96 + (14<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN|LEFT});
		chunkMap.put(96 + (15<<12), new int[] {mapUtil.getBlock("trapdoor"), DOWN|RIGHT});
		chunkMap.put(97, new int[] {mapUtil.getBlock("stone"), NONE});
		chunkMap.put(97 + (1<<12), new int[] {mapUtil.getBlock("cobblestone"), NONE});
		chunkMap.put(97 + (2<<12), new int[] {mapUtil.getBlock("stone brick"), NONE});
		chunkMap.put(97 + (3<<12), new int[] {mapUtil.newBlock("mossy stone brick"), NONE});
		chunkMap.put(97 + (4<<12), new int[] {mapUtil.newBlock("cracked stone brick"), NONE});
		chunkMap.put(97 + (5<<12), new int[] {mapUtil.newBlock("chiseled stone brick"), NONE});
		chunkMap.put(98, new int[] {mapUtil.getBlock("stone brick"), NONE});
		chunkMap.put(98 + (1<<12), new int[] {mapUtil.getBlock("mossy stone brick"), NONE});
		chunkMap.put(98 + (2<<12), new int[] {mapUtil.getBlock("cracked stone brick"), NONE});
		chunkMap.put(98 + (3<<12), new int[] {mapUtil.getBlock("chiseled stone brick"), NONE});
		for (int i = 0; i < 16; i++) {
			chunkMap.put(99 + (i<<12), new int[] {mapUtil.newBlock("brown mushroom block " + i), NONE});
		}
		for (int i = 0; i < 16; i++) {
			chunkMap.put(100 + (i<<12), new int[] {mapUtil.newBlock("red mushroom block " + i), NONE});
		}
		//TODO iron bars, glass pane
		chunkMap.put(103, new int[] {mapUtil.newBlock("melon"), NONE});
		//TODO pumpkin stem, melon stem, vines, fence gate, brick stairs, stone brick stairs
		chunkMap.put(110, new int[] {mapUtil.newBlock("mycelium"), NONE});
		chunkMap.put(111, new int[] {mapUtil.newBlock("lily pad"), NONE});
		chunkMap.put(112, new int[] {mapUtil.getBlock("nether brick"), NONE});
		//TODO nether brick fence, nether brick stairs
		chunkMap.put(115, new int[] {mapUtil.newBlock("nether wart 0"), NONE});
		chunkMap.put(115 + (1<<12), new int[] {mapUtil.newBlock("nether wart 1"), NONE});
		chunkMap.put(115 + (2<<12), new int[] {mapUtil.getBlock("nether wart 1"), NONE});
		chunkMap.put(115 + (3<<12), new int[] {mapUtil.newBlock("nether wart 2"), NONE});
		chunkMap.put(116, new int[] {mapUtil.newBlock("enchanting table"), NONE});
		//TODO brewing stand
		chunkMap.put(118, new int[] {mapUtil.newBlock("cauldron 0"), NONE});
		chunkMap.put(118 + (1<<12), new int[] {mapUtil.newBlock("cauldron 1"), NONE});
		chunkMap.put(118 + (2<<12), new int[] {mapUtil.newBlock("cauldron 2"), NONE});
		chunkMap.put(118 + (3<<12), new int[] {mapUtil.newBlock("cauldron 3"), NONE});
		//TODO end portal
		chunkMap.put(120, new int[] {mapUtil.newBlock("end portal frame empty"), NORTH});
		chunkMap.put(120 + (1<<12), new int[] {mapUtil.getBlock("end portal frame empty"), EAST});
		chunkMap.put(120 + (2<<12), new int[] {mapUtil.getBlock("end portal frame empty"), NONE});
		chunkMap.put(120 + (3<<12), new int[] {mapUtil.getBlock("end portal frame empty"), WEST});
		chunkMap.put(120 + (4<<12), new int[] {mapUtil.newBlock("end portal frame full"), NORTH});
		chunkMap.put(120 + (5<<12), new int[] {mapUtil.getBlock("end portal frame full"), EAST});
		chunkMap.put(120 + (6<<12), new int[] {mapUtil.getBlock("end portal frame full"), NONE});
		chunkMap.put(120 + (7<<12), new int[] {mapUtil.getBlock("end portal frame full"), WEST});
		chunkMap.put(121, new int[] {mapUtil.newBlock("end stone"), NONE});
		chunkMap.put(122, new int[] {mapUtil.newBlock("dragon egg"), NONE});
		chunkMap.put(123, new int[] {mapUtil.newBlock("redstone lamp off"), NONE});
		chunkMap.put(124, new int[] {mapUtil.newBlock("redstone lamp on"), NONE});
		chunkMap.put(125, new int[] {mapUtil.getBlock("oak wood planks"), NONE});
		chunkMap.put(125 + (1<<12), new int[] {mapUtil.getBlock("spruce wood planks"), NONE});
		chunkMap.put(125 + (2<<12), new int[] {mapUtil.getBlock("birch wood planks"), NONE});
		chunkMap.put(125 + (3<<12), new int[] {mapUtil.getBlock("jungle wood planks"), NONE});
		chunkMap.put(125 + (4<<12), new int[] {mapUtil.getBlock("acacia wood planks"), NONE});
		chunkMap.put(125 + (5<<12), new int[] {mapUtil.getBlock("dark oak wood planks"), NONE});
		//TODO wooden slab
		chunkMap.put(127, new int[] {mapUtil.newBlock("cocoa stage 0"), NONE});
		chunkMap.put(127 + (1<<12), new int[] {mapUtil.getBlock("cocoa stage 0"), WEST});
		chunkMap.put(127 + (2<<12), new int[] {mapUtil.getBlock("cocoa stage 0"), NORTH});
		chunkMap.put(127 + (3<<12), new int[] {mapUtil.getBlock("cocoa stage 0"), EAST});
		chunkMap.put(127 + (4<<12), new int[] {mapUtil.newBlock("cocoa stage 1"), NONE});
		chunkMap.put(127 + (5<<12), new int[] {mapUtil.getBlock("cocoa stage 1"), WEST});
		chunkMap.put(127 + (6<<12), new int[] {mapUtil.getBlock("cocoa stage 1"), NORTH});
		chunkMap.put(127 + (7<<12), new int[] {mapUtil.getBlock("cocoa stage 1"), EAST});
		chunkMap.put(127 + (8<<12), new int[] {mapUtil.newBlock("cocoa stage 2"), NONE});
		chunkMap.put(127 + (9<<12), new int[] {mapUtil.getBlock("cocoa stage 2"), WEST});
		chunkMap.put(127 + (10<<12), new int[] {mapUtil.getBlock("cocoa stage 2"), NORTH});
		chunkMap.put(127 + (11<<12), new int[] {mapUtil.getBlock("cocoa stage 2"), EAST});
		chunkMap.put(128, new int[] {mapUtil.newBlock("sandstone stairs bottom"), WEST});
		chunkMap.put(128 + (1<<12), new int[] {mapUtil.getBlock("sandstone stairs bottom"), EAST});
		chunkMap.put(128 + (2<<12), new int[] {mapUtil.getBlock("sandstone stairs bottom"), NORTH});
		chunkMap.put(128 + (3<<12), new int[] {mapUtil.getBlock("sandstone stairs bottom"), NONE});
		chunkMap.put(128 + (4<<12), new int[] {mapUtil.newBlock("sandstone stairs top"), WEST});
		chunkMap.put(128 + (5<<12), new int[] {mapUtil.getBlock("sandstone stairs top"), EAST});
		chunkMap.put(128 + (6<<12), new int[] {mapUtil.getBlock("sandstone stairs top"), NORTH});
		chunkMap.put(128 + (7<<12), new int[] {mapUtil.getBlock("sandstone stairs top"), NONE});
		chunkMap.put(129, new int[] {mapUtil.newBlock("emerald ore"), NONE});
		//TODO enderchest, tripwire hook, tripwire
		chunkMap.put(133, new int[] {mapUtil.newBlock("emerald block"), NONE});
		//TODO wood stairs, command block
		chunkMap.put(138, new int[] {mapUtil.newBlock("beacon"), NONE});
		
		idMap = new int[mapUtil.getAllBlocks().length][][];
		idMap[mapUtil.getBlock("air")] = mapUtil.nextVoxel("error", 0); //will not be rendered
		idMap[mapUtil.getBlock("error")] = mapUtil.nextVoxel("error", 0);
		idMap[mapUtil.getBlock("stone")] = mapUtil.nextTexture("stone", 0);
		idMap[mapUtil.getBlock("granite")] = mapUtil.nextTexture("stone_granite", 0);
		idMap[mapUtil.getBlock("polished granite")] = mapUtil.nextTexture("stone_granite_smooth", 0);
		idMap[mapUtil.getBlock("diorite")] = mapUtil.nextTexture("stone_diorite", 0);
		idMap[mapUtil.getBlock("polished diorite")] = mapUtil.nextTexture("stone_diorite_smooth", 0);
		idMap[mapUtil.getBlock("andesite")] = mapUtil.nextTexture("stone_andesite", 0);
		idMap[mapUtil.getBlock("polished andesite")] = mapUtil.nextTexture("stone_andesite_smooth", 0);
		//FIXME
		//idMap[mapUtil.getBlock("grass")] = mapUtil.nextTexture(new String[] {"grass_side", "grass_side", "grass_top", "dirt", "grass_side", "grass_side"}, 0);
		int grassSide = mapUtil.nextTexture("grass_side");
		int dirt = mapUtil.nextTexture("dirt");
		int grassTop = mapUtil.nextVoxel("grass_top");
		idMap[mapUtil.getBlock("grass")] = new int[][] {{0,grassSide,0}, {0,grassSide,0}, {1,grassTop,0}, {0,dirt,0}, {0,grassSide,0}, {0,grassSide,0}};
		idMap[mapUtil.getBlock("dirt")] = mapUtil.nextTexture("dirt", 0);
		idMap[mapUtil.getBlock("coarse dirt")] = mapUtil.nextTexture("coarse_dirt", 0);
		idMap[mapUtil.getBlock("podzol")] = mapUtil.nextTexture(new String[] {"dirt_podzol_side", "dirt_podzol_side", "dirt_podzol_top", "dirt", "dirt_podzol_side", "dirt_podzol_side"}, 0);
		idMap[mapUtil.getBlock("cobblestone")] = mapUtil.nextTexture("cobblestone", 0);
		idMap[mapUtil.getBlock("oak wood planks")] = mapUtil.nextTexture("planks_oak", 0);
		idMap[mapUtil.getBlock("spruce wood planks")] = mapUtil.nextTexture("planks_spruce", 0);
		idMap[mapUtil.getBlock("birch wood planks")] = mapUtil.nextTexture("planks_birch", 0);
		idMap[mapUtil.getBlock("jungle wood planks")] = mapUtil.nextTexture("planks_jungle", 0);
		idMap[mapUtil.getBlock("acacia wood planks")] = mapUtil.nextTexture("planks_acacia", 0);
		idMap[mapUtil.getBlock("dark oak wood planks")] = mapUtil.nextTexture("planks_big_oak", 0);
		idMap[mapUtil.getBlock("oak sapling")] = mapUtil.nextVoxel("sapling_oak", 0);
		idMap[mapUtil.getBlock("spruce sapling")] = mapUtil.nextVoxel("sapling_spruce", 0);
		idMap[mapUtil.getBlock("birch sapling")] = mapUtil.nextVoxel("sapling_birch", 0);
		idMap[mapUtil.getBlock("jungle sapling")] = mapUtil.nextVoxel("sapling_jungle", 0);
		idMap[mapUtil.getBlock("acacia sapling")] = mapUtil.nextVoxel("sapling_acacia", 0);
		idMap[mapUtil.getBlock("dark oak sapling")] = mapUtil.nextVoxel("sapling_dark_oak", 0);
		idMap[mapUtil.getBlock("bedrock")] = mapUtil.nextTexture("bedrock", 0);
		idMap[mapUtil.getBlock("water16")] = mapUtil.nextVoxel("water16", 0);
		idMap[mapUtil.getBlock("water14")] = mapUtil.nextVoxel("water14", 0);
		idMap[mapUtil.getBlock("water12")] = mapUtil.nextVoxel("water12", 0);
		idMap[mapUtil.getBlock("water10")] = mapUtil.nextVoxel("water10", 0);
		idMap[mapUtil.getBlock("water08")] = mapUtil.nextVoxel("water08", 0);
		idMap[mapUtil.getBlock("water06")] = mapUtil.nextVoxel("water06", 0);
		idMap[mapUtil.getBlock("water04")] = mapUtil.nextVoxel("water04", 0);
		idMap[mapUtil.getBlock("water02")] = mapUtil.nextVoxel("water02", 0);
		idMap[mapUtil.getBlock("lava16")] = mapUtil.nextVoxel("lava16", 0);
		idMap[mapUtil.getBlock("lava14")] = mapUtil.nextVoxel("lava14", 0);
		idMap[mapUtil.getBlock("lava12")] = mapUtil.nextVoxel("lava12", 0);
		idMap[mapUtil.getBlock("lava10")] = mapUtil.nextVoxel("lava10", 0);
		idMap[mapUtil.getBlock("lava08")] = mapUtil.nextVoxel("lava08", 0);
		idMap[mapUtil.getBlock("lava06")] = mapUtil.nextVoxel("lava06", 0);
		idMap[mapUtil.getBlock("lava04")] = mapUtil.nextVoxel("lava04", 0);
		idMap[mapUtil.getBlock("lava02")] = mapUtil.nextVoxel("lava02", 0);
		idMap[mapUtil.getBlock("sand")] = mapUtil.nextTexture("sand", 0);
		idMap[mapUtil.getBlock("red sand")] = mapUtil.nextTexture("red_sand", 0);
		idMap[mapUtil.getBlock("gravel")] = mapUtil.nextTexture("gravel", 0);
		idMap[mapUtil.getBlock("gold ore")] = mapUtil.nextTexture("gold_ore", 0);
		idMap[mapUtil.getBlock("iron ore")] = mapUtil.nextTexture("iron_ore", 0);
		idMap[mapUtil.getBlock("coal ore")] = mapUtil.nextTexture("coal_ore", 0);
		idMap[mapUtil.getBlock("oak wood")] = mapUtil.nextTexture(new String[] {"log_oak", "log_oak", "log_oak_top", "log_oak_top", "log_oak", "log_oak"}, 0);
		idMap[mapUtil.getBlock("spruce wood")] = mapUtil.nextTexture(new String[] {"log_spruce", "log_spruce", "log_spruce_top", "log_spruce_top", "log_spruce", "log_spruce"}, 0);
		idMap[mapUtil.getBlock("birch wood")] = mapUtil.nextTexture(new String[] {"log_birch", "log_birch", "log_birch_top", "log_birch_top", "log_birch", "log_birch"}, 0);
		idMap[mapUtil.getBlock("jungle wood")] = mapUtil.nextTexture(new String[] {"log_jungle", "log_jungle", "log_jungle_top", "log_jungle_top", "log_jungle", "log_jungle"}, 0);
		idMap[mapUtil.getBlock("oak bark")] = mapUtil.nextTexture("log_oak", 0);
		idMap[mapUtil.getBlock("spruce bark")] = mapUtil.nextTexture("log_spruce", 0);
		idMap[mapUtil.getBlock("birch bark")] = mapUtil.nextTexture("log_birch", 0);
		idMap[mapUtil.getBlock("jungle bark")] = mapUtil.nextTexture("log_jungle", 0);
		idMap[mapUtil.getBlock("oak leaves")] = mapUtil.nextVoxel("leaves_oak", 0);
		idMap[mapUtil.getBlock("spruce leaves")] = mapUtil.nextVoxel("leaves_spruce", 0);
		idMap[mapUtil.getBlock("birch leaves")] = mapUtil.nextVoxel("leaves_birch", 0);
		idMap[mapUtil.getBlock("jungle leaves")] = mapUtil.nextVoxel("leaves_jungle", 0);
		idMap[mapUtil.getBlock("sponge")] = mapUtil.nextTexture("sponge", 0);
		idMap[mapUtil.getBlock("wet sponge")] = mapUtil.nextTexture("sponge_wet", 0);
		idMap[mapUtil.getBlock("glass")] = mapUtil.nextTexture("glass", 0);
		idMap[mapUtil.getBlock("lapis ore")] = mapUtil.nextTexture("lapis_ore", 0);
		idMap[mapUtil.getBlock("lapis block")] = mapUtil.nextTexture("lapis_block", 0);
		idMap[mapUtil.getBlock("dispenser vertical")] = mapUtil.nextTexture(new String[] {"furnace_top", "furnace_top", "furnace_top", "furnace_top", "dispenser_front_vertical", "furnace_top"}, 0);
		idMap[mapUtil.getBlock("dispenser horizontal")] = mapUtil.nextTexture(new String[] {"furnace_side", "furnace_side", "furnace_top", "furnace_top", "dispenser_front_horizontal", "furnace_side"}, 0);
		idMap[mapUtil.getBlock("sandstone")] = mapUtil.nextTexture(new String[] {"sandstone_normal", "sandstone_normal", "sandstone_top", "sandstone_bottom", "sandstone_normal", "sandstone_normal"}, 0);
		idMap[mapUtil.getBlock("chiseled sandstone")] = mapUtil.nextTexture(new String[] {"sandstone_carved", "sandstone_carved", "sandstone_top", "sandstone_top", "sandstone_carved", "sandstone_carved"}, 0);
		idMap[mapUtil.getBlock("smooth sandstone")] = mapUtil.nextTexture(new String[] {"sandstone_smooth", "sandstone_smooth", "sandstone_top", "sandstone_top", "sandstone_smooth", "sandstone_smooth"}, 0);
		idMap[mapUtil.getBlock("note block")] = mapUtil.nextTexture("noteblock", 0);
		idMap[mapUtil.getBlock("bed feet")] = mapUtil.nextVoxel("bed_feet", 0);
		idMap[mapUtil.getBlock("bed head")] = mapUtil.nextVoxel("bed_head", 0);
		idMap[mapUtil.getBlock("powered rail")] = mapUtil.nextVoxel("rail_powered", 0);
		idMap[mapUtil.getBlock("sloped powered rail")] = mapUtil.nextVoxel("rail_powered_slope", 0);
		idMap[mapUtil.getBlock("activated powered rail")] = mapUtil.nextVoxel("rail_powered_on", 0);
		idMap[mapUtil.getBlock("activated sloped powered rail")] = mapUtil.nextVoxel("rail_powered_slope_on", 0);
		idMap[mapUtil.getBlock("detector rail")] = mapUtil.nextVoxel("rail_detector", 0);
		idMap[mapUtil.getBlock("sloped detector rail")] = mapUtil.nextVoxel("rail_detector_slope", 0);
		idMap[mapUtil.getBlock("activated detector rail")] = mapUtil.nextVoxel("rail_detector_on", 0);
		idMap[mapUtil.getBlock("activated sloped detector rail")] = mapUtil.nextVoxel("rail_detector_slope_on", 0);
		idMap[mapUtil.getBlock("sticky piston retracted")] = mapUtil.nextVoxel("piston_retracted_sticky", 0);
		idMap[mapUtil.getBlock("piston extended")] = mapUtil.nextVoxel("piston_extended", 0);
		idMap[mapUtil.getBlock("cobweb")] = mapUtil.nextVoxel("web", 0);
		idMap[mapUtil.getBlock("shrub")] = mapUtil.nextVoxel("deadbush", 0);
		idMap[mapUtil.getBlock("tall grass")] = mapUtil.nextVoxel("tallgrass", 0);
		idMap[mapUtil.getBlock("fern")] = mapUtil.nextVoxel("fern", 0);
		idMap[mapUtil.getBlock("dead bush")] = mapUtil.nextVoxel("deadbush", 0);
		idMap[mapUtil.getBlock("piston retracted")] = mapUtil.nextVoxel("piston_retracted", 0);
		idMap[mapUtil.getBlock("piston head")] = mapUtil.nextVoxel("piston_head", 0);
		idMap[mapUtil.getBlock("sticky piston head")] = mapUtil.nextVoxel("piston_head_sticky", 0);
		idMap[mapUtil.getBlock("white wool")] = mapUtil.nextTexture("wool_colored_white", 0);
		idMap[mapUtil.getBlock("orange wool")] = mapUtil.nextTexture("wool_colored_orange", 0);
		idMap[mapUtil.getBlock("magenta wool")] = mapUtil.nextTexture("wool_colored_magenta", 0);
		idMap[mapUtil.getBlock("light blue wool")] = mapUtil.nextTexture("wool_colored_light_blue", 0);
		idMap[mapUtil.getBlock("yellow wool")] = mapUtil.nextTexture("wool_colored_yellow", 0);
		idMap[mapUtil.getBlock("lime wool")] = mapUtil.nextTexture("wool_colored_lime", 0);
		idMap[mapUtil.getBlock("pink wool")] = mapUtil.nextTexture("wool_colored_pink", 0);
		idMap[mapUtil.getBlock("gray wool")] = mapUtil.nextTexture("wool_colored_gray", 0);
		idMap[mapUtil.getBlock("light gray wool")] = mapUtil.nextTexture("wool_colored_silver", 0);
		idMap[mapUtil.getBlock("cyan wool")] = mapUtil.nextTexture("wool_colored_cyan", 0);
		idMap[mapUtil.getBlock("purple wool")] = mapUtil.nextTexture("wool_colored_purple", 0);
		idMap[mapUtil.getBlock("blue wool")] = mapUtil.nextTexture("wool_colored_blue", 0);
		idMap[mapUtil.getBlock("brown wool")] = mapUtil.nextTexture("wool_colored_brown", 0);
		idMap[mapUtil.getBlock("green wool")] = mapUtil.nextTexture("wool_colored_green", 0);
		idMap[mapUtil.getBlock("red wool")] = mapUtil.nextTexture("wool_colored_red", 0);
		idMap[mapUtil.getBlock("black wool")] = mapUtil.nextTexture("wool_colored_black", 0);
		idMap[mapUtil.getBlock("dandelion")] = mapUtil.nextVoxel("flower_dandelion", 0);
		idMap[mapUtil.getBlock("poppy")] = mapUtil.nextVoxel("flower_rose", 0);
		idMap[mapUtil.getBlock("blue orchid")] = mapUtil.nextVoxel("flower_blue_orchid", 0);
		idMap[mapUtil.getBlock("allium")] = mapUtil.nextVoxel("flower_allium", 0);
		idMap[mapUtil.getBlock("azure bluet")] = mapUtil.nextVoxel("flower_houstonia", 0);
		idMap[mapUtil.getBlock("red tulip")] = mapUtil.nextVoxel("flower_tulip_red", 0);
		idMap[mapUtil.getBlock("orange tulip")] = mapUtil.nextVoxel("flower_tulip_orange", 0);
		idMap[mapUtil.getBlock("white tulip")] = mapUtil.nextVoxel("flower_tulip_white", 0);
		idMap[mapUtil.getBlock("pink tulip")] = mapUtil.nextVoxel("flower_tulip_pink", 0);
		idMap[mapUtil.getBlock("oxeye daisy")] = mapUtil.nextVoxel("flower_oxeye_daisy", 0);
		idMap[mapUtil.getBlock("brown mushroom")] = mapUtil.nextVoxel("mushroom_brown", 0);
		idMap[mapUtil.getBlock("red mushroom")] = mapUtil.nextVoxel("mushroom_red", 0);
		idMap[mapUtil.getBlock("gold block")] = mapUtil.nextTexture("gold_block", 0);
		idMap[mapUtil.getBlock("iron block")] = mapUtil.nextTexture("iron_block", 0);
		idMap[mapUtil.getBlock("double stone slab")] = mapUtil.nextTexture(new String[] {"stone_slab_side", "stone_slab_side", "stone_slab_top", "stone_slab_top", "stone_slab_side", "stone_slab_side"}, 0);
		idMap[mapUtil.getBlock("bricks")] = mapUtil.nextTexture("brick", 0);
		idMap[mapUtil.getBlock("stone brick")] = mapUtil.nextTexture("stonebrick", 0);
		idMap[mapUtil.getBlock("nether brick")] = mapUtil.nextTexture("nether_brick", 0);
		idMap[mapUtil.getBlock("quartz")] = mapUtil.nextTexture(new String[] {"quartz_block_side", "quartz_block_side", "quartz_block_top", "quartz_block_bottom", "quartz_block_side", "quartz_block_side"}, 0);
		idMap[mapUtil.getBlock("smooth double stone slab")] = mapUtil.nextTexture("stone_slab_top", 0);
		idMap[mapUtil.getBlock("smooth double sandstone slab")] = mapUtil.nextTexture("sandstone_top", 0);
		idMap[mapUtil.getBlock("smooth quartz slab")] = mapUtil.nextTexture("quartz_block_top", 0);
		idMap[mapUtil.getBlock("tnt")] = mapUtil.nextTexture(new String[] {"tnt_side", "tnt_side", "tnt_top", "tnt_bottom", "tnt_side", "tnt_side"}, 0);
		int bookshelf = mapUtil.nextVoxel("bookshelf");
		int planksOak = mapUtil.nextTexture("planks_oak");
		idMap[mapUtil.getBlock("bookshelf")] = new int[][] {{1,bookshelf,EAST}, {1,bookshelf,WEST}, {0,planksOak,0}, {0,planksOak,0}, {1,bookshelf,NONE}, {1,bookshelf,NORTH}};
		idMap[mapUtil.getBlock("mossy cobblestone")] = mapUtil.nextTexture("cobblestone_mossy", 0);
		idMap[mapUtil.getBlock("obsidian")] = mapUtil.nextTexture("obsidian", 0);
		idMap[mapUtil.getBlock("torch wall")] = mapUtil.nextVoxel("torch_wall", 0);
		idMap[mapUtil.getBlock("torch floor")] = mapUtil.nextVoxel("torch_floor", 0);
		idMap[mapUtil.getBlock("fire")] = mapUtil.nextVoxel("fire", 0);
		idMap[mapUtil.getBlock("mob spawner")] = mapUtil.nextVoxel("mob_spawner", 0);
		idMap[mapUtil.getBlock("oak stairs top")] = mapUtil.nextVoxel("stairs_top_oak", 0);
		idMap[mapUtil.getBlock("oak stairs bottom")] = mapUtil.nextVoxel("stairs_bottom_oak", 0);
		idMap[mapUtil.getBlock("diamond ore")] = mapUtil.nextTexture("diamond_ore", 0);
		idMap[mapUtil.getBlock("diamond block")] = mapUtil.nextTexture("diamond_block", 0);
		idMap[mapUtil.getBlock("crafting table")] = mapUtil.nextVoxel("crafting_table", 0);
		idMap[mapUtil.getBlock("farmland dry")] = mapUtil.nextVoxel("farmland_dry", 0);
		idMap[mapUtil.getBlock("farmland wet")] = mapUtil.nextVoxel("farmland_wet", 0);
		idMap[mapUtil.getBlock("furnace")] = mapUtil.nextVoxel("furnace", 0);
		idMap[mapUtil.getBlock("furnace on")] = mapUtil.nextVoxel("furnace_on", 0);
		idMap[mapUtil.getBlock("oak door lower")] = mapUtil.nextVoxel("door_oak_lower", 0);
		idMap[mapUtil.getBlock("oak door upper")] = mapUtil.nextVoxel("door_oak_upper", 0);
		idMap[mapUtil.getBlock("ladder")] = mapUtil.nextVoxel("ladder", 0);
		idMap[mapUtil.getBlock("rail straight")] = mapUtil.nextVoxel("rail_normal", 0);
		idMap[mapUtil.getBlock("rail sloped")] = mapUtil.nextVoxel("rail_normal_slope", 0);
		idMap[mapUtil.getBlock("rail curved")] = mapUtil.nextVoxel("rail_normal_turned", 0);
		idMap[mapUtil.getBlock("cobblestone stairs bottom")] = mapUtil.nextVoxel("stairs_bottom_cobblestone", 0);
		idMap[mapUtil.getBlock("cobblestone stairs top")] = mapUtil.nextVoxel("stairs_top_cobblestone", 0);
		idMap[mapUtil.getBlock("wall sign")] = mapUtil.nextVoxel("sign_wall", 0);
		idMap[mapUtil.getBlock("lever off")] = mapUtil.nextVoxel("lever_off", 0);
		idMap[mapUtil.getBlock("lever on")] = mapUtil.nextVoxel("lever_on", 0);
		idMap[mapUtil.getBlock("stone pressure plate")] = mapUtil.nextVoxel("pressure_plate_stone", 0);
		idMap[mapUtil.getBlock("iron door lower")] = mapUtil.nextVoxel("door_iron_lower", 0);
		idMap[mapUtil.getBlock("iron door upper")] = mapUtil.nextVoxel("door_iron_upper", 0);
		idMap[mapUtil.getBlock("wooden pressure plate")] = mapUtil.nextVoxel("pressure_plate_oak", 0);
		idMap[mapUtil.getBlock("redstone ore")] = mapUtil.nextTexture("redstone_ore", 0);
		idMap[mapUtil.getBlock("redstone torch wall off")] = mapUtil.nextVoxel("redstone_torch_wall_off", 0);
		idMap[mapUtil.getBlock("redstone torch floor off")] = mapUtil.nextVoxel("redstone_torch_floor_off", 0);
		idMap[mapUtil.getBlock("redstone torch wall on")] = mapUtil.nextVoxel("redstone_torch_wall_on", 0);
		idMap[mapUtil.getBlock("redstone torch floor on")] = mapUtil.nextVoxel("redstone_torch_floor_on", 0);
		idMap[mapUtil.getBlock("stone button off")] = mapUtil.nextVoxel("button_stone_off", 0);
		idMap[mapUtil.getBlock("stone button on")] = mapUtil.nextVoxel("button_stone_on", 0);
		idMap[mapUtil.getBlock("snow02")] = mapUtil.nextVoxel("snow_02", 0);
		idMap[mapUtil.getBlock("snow04")] = mapUtil.nextVoxel("snow_04", 0);
		idMap[mapUtil.getBlock("snow06")] = mapUtil.nextVoxel("snow_06", 0);
		idMap[mapUtil.getBlock("snow08")] = mapUtil.nextVoxel("snow_08", 0);
		idMap[mapUtil.getBlock("snow10")] = mapUtil.nextVoxel("snow_10", 0);
		idMap[mapUtil.getBlock("snow12")] = mapUtil.nextVoxel("snow_12", 0);
		idMap[mapUtil.getBlock("snow14")] = mapUtil.nextVoxel("snow_14", 0);
		idMap[mapUtil.getBlock("snow16")] = mapUtil.nextVoxel("snow_16", 0);
		idMap[mapUtil.getBlock("ice")] = mapUtil.nextTexture("ice", 0);
		idMap[mapUtil.getBlock("snow")] = mapUtil.nextTexture("snow", 0);
		idMap[mapUtil.getBlock("cactus")] = mapUtil.nextVoxel("cactus", 0);
		idMap[mapUtil.getBlock("clay")] = mapUtil.nextTexture("clay", 0);
		idMap[mapUtil.getBlock("sugar cane")] = mapUtil.nextVoxel("reeds", 0);
		idMap[mapUtil.getBlock("jukebox")] = mapUtil.nextTexture(new String[] {"jukebox_side", "jukebox_side", "jukebox_top", "jukebox_side", "jukebox_side", "jukebox_side"}, 0);
		idMap[mapUtil.getBlock("pumpkin")] = mapUtil.nextTexture(new String[] {"pumpkin_side", "pumpkin_side", "pumpkin_top", "pumpkin_top", "pumpkin_face_off", "pumpkin_side"}, 0);
		idMap[mapUtil.getBlock("pumpkin no face")] = mapUtil.nextTexture(new String[] {"pumpkin_side", "pumpkin_side", "pumpkin_top", "pumpkin_top", "pumpkin_side", "pumpkin_side"}, 0);
		idMap[mapUtil.getBlock("netherrack")] = mapUtil.nextTexture("netherrack", 0);
		idMap[mapUtil.getBlock("soul sand")] = mapUtil.nextTexture("soul_sand", 0);
		idMap[mapUtil.getBlock("glowstone")] = mapUtil.nextTexture("glowstone", 0);
		idMap[mapUtil.getBlock("jack o'lantern")] = mapUtil.nextTexture(new String[] {"pumpkin_side", "pumpkin_side", "pumpkin_top", "pumpkin_top", "pumpkin_face_on", "pumpkin_side"}, 0);
		idMap[mapUtil.getBlock("cake 0")] = mapUtil.nextVoxel("cake_0", 0);
		idMap[mapUtil.getBlock("cake 1")] = mapUtil.nextVoxel("cake_1", 0);
		idMap[mapUtil.getBlock("cake 2")] = mapUtil.nextVoxel("cake_2", 0);
		idMap[mapUtil.getBlock("cake 3")] = mapUtil.nextVoxel("cake_3", 0);
		idMap[mapUtil.getBlock("cake 4")] = mapUtil.nextVoxel("cake_4", 0);
		idMap[mapUtil.getBlock("cake 5")] = mapUtil.nextVoxel("cake_5", 0);
		idMap[mapUtil.getBlock("cake 6")] = mapUtil.nextVoxel("cake_6", 0);
		idMap[mapUtil.getBlock("repeater off 1")] = mapUtil.nextVoxel("repeater_1_off", 0);
		idMap[mapUtil.getBlock("repeater off 2")] = mapUtil.nextVoxel("repeater_2_off", 0);
		idMap[mapUtil.getBlock("repeater off 3")] = mapUtil.nextVoxel("repeater_3_off", 0);
		idMap[mapUtil.getBlock("repeater off 4")] = mapUtil.nextVoxel("repeater_4_off", 0);
		idMap[mapUtil.getBlock("repeater on 1")] = mapUtil.nextVoxel("repeater_1_on", 0);
		idMap[mapUtil.getBlock("repeater on 2")] = mapUtil.nextVoxel("repeater_2_on", 0);
		idMap[mapUtil.getBlock("repeater on 3")] = mapUtil.nextVoxel("repeater_3_on", 0);
		idMap[mapUtil.getBlock("repeater on 4")] = mapUtil.nextVoxel("repeater_4_on", 0);
		idMap[mapUtil.getBlock("white stained glass")] = mapUtil.nextTexture("glass_white", 0);
		idMap[mapUtil.getBlock("orange stained glass")] = mapUtil.nextTexture("glass_orange", 0);
		idMap[mapUtil.getBlock("magenta stained glass")] = mapUtil.nextTexture("glass_magenta", 0);
		idMap[mapUtil.getBlock("light blue stained glass")] = mapUtil.nextTexture("glass_light_blue", 0);
		idMap[mapUtil.getBlock("yellow stained glass")] = mapUtil.nextTexture("glass_yellow", 0);
		idMap[mapUtil.getBlock("lime stained glass")] = mapUtil.nextTexture("glass_lime", 0);
		idMap[mapUtil.getBlock("pink stained glass")] = mapUtil.nextTexture("glass_pink", 0);
		idMap[mapUtil.getBlock("gray stained glass")] = mapUtil.nextTexture("glass_gray", 0);
		idMap[mapUtil.getBlock("light gray stained glass")] = mapUtil.nextTexture("glass_silver", 0);
		idMap[mapUtil.getBlock("cyan stained glass")] = mapUtil.nextTexture("glass_cyan", 0);
		idMap[mapUtil.getBlock("purple stained glass")] = mapUtil.nextTexture("glass_purple", 0);
		idMap[mapUtil.getBlock("blue stained glass")] = mapUtil.nextTexture("glass_blue", 0);
		idMap[mapUtil.getBlock("brown stained glass")] = mapUtil.nextTexture("glass_brown", 0);
		idMap[mapUtil.getBlock("green stained glass")] = mapUtil.nextTexture("glass_green", 0);
		idMap[mapUtil.getBlock("red stained glass")] = mapUtil.nextTexture("glass_red", 0);
		idMap[mapUtil.getBlock("black stained glass")] = mapUtil.nextTexture("glass_black", 0);
		idMap[mapUtil.getBlock("trapdoor")] = mapUtil.nextVoxel("trapdoor", 0);
		idMap[mapUtil.getBlock("mossy stone brick")] = mapUtil.nextTexture("stonebrick_mossy", 0);
		idMap[mapUtil.getBlock("cracked stone brick")] = mapUtil.nextTexture("stonebrick_cracked", 0);
		idMap[mapUtil.getBlock("chiseled stone brick")] = mapUtil.nextTexture("stonebrick_carved", 0);
		idMap[mapUtil.getBlock("brown mushroom block 0")] = mapUtil.nextTexture("mushroom_block_inside", 0);
		idMap[mapUtil.getBlock("brown mushroom block 1")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 2")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 3")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 4")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 5")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 6")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 7")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_brown"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 8")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_brown"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 9")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_skin_brown", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_brown"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 10")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_stem", "mushroom_block_skin_stem"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 11")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 12")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 13")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 14")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_brown", "mushroom_block_skin_brown", "mushroom_block_skin_brown", "mushroom_block_skin_brown", "mushroom_block_skin_brown", "mushroom_block_skin_brown"}, 0);
		idMap[mapUtil.getBlock("brown mushroom block 15")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 0")] = mapUtil.nextTexture("mushroom_block_inside", 0);
		idMap[mapUtil.getBlock("red mushroom block 1")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 2")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 3")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 4")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 5")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 6")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 7")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_red"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 8")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_red"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 9")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_skin_red", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_red"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 10")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_skin_stem", "mushroom_block_skin_stem"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 11")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 12")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 13")] = mapUtil.nextTexture(new String[] {"mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside", "mushroom_block_inside"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 14")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_red", "mushroom_block_skin_red", "mushroom_block_skin_red", "mushroom_block_skin_red", "mushroom_block_skin_red", "mushroom_block_skin_red"}, 0);
		idMap[mapUtil.getBlock("red mushroom block 15")] = mapUtil.nextTexture(new String[] {"mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem", "mushroom_block_skin_stem"}, 0);
		idMap[mapUtil.getBlock("melon")] = mapUtil.nextTexture(new String[] {"melon_side", "melon_side", "melon_top", "melon_top", "melon_side", "melon_side"}, 0);
		idMap[mapUtil.getBlock("mycelium")] = mapUtil.nextTexture(new String[] {"mycelium_side", "mycelium_side", "mycelium_top", "dirt", "mycelium_side", "mycelium_side"}, 0);
		idMap[mapUtil.getBlock("lily pad")] = mapUtil.nextVoxel("waterlily", 0);
		idMap[mapUtil.getBlock("nether brick")] = mapUtil.nextTexture("nether_brick", 0);
		idMap[mapUtil.getBlock("nether wart 0")] = mapUtil.nextVoxel("nether_wart_0", 0);
		idMap[mapUtil.getBlock("nether wart 1")] = mapUtil.nextVoxel("nether_wart_1", 0);
		idMap[mapUtil.getBlock("nether wart 2")] = mapUtil.nextVoxel("nether_wart_2", 0);
		idMap[mapUtil.getBlock("enchanting table")] = mapUtil.nextVoxel("enchanting_table", 0);
		idMap[mapUtil.getBlock("cauldron 0")] = mapUtil.nextVoxel("cauldron_0", 0);
		idMap[mapUtil.getBlock("cauldron 1")] = mapUtil.nextVoxel("cauldron_1", 0);
		idMap[mapUtil.getBlock("cauldron 2")] = mapUtil.nextVoxel("cauldron_2", 0);
		idMap[mapUtil.getBlock("cauldron 3")] = mapUtil.nextVoxel("cauldron_3", 0);
		idMap[mapUtil.getBlock("end portal frame empty")] = mapUtil.nextVoxel("endframe_empty", 0);
		idMap[mapUtil.getBlock("end portal frame full")] = mapUtil.nextVoxel("endframe_full", 0);
		idMap[mapUtil.getBlock("end stone")] = mapUtil.nextTexture("end_stone", 0);
		idMap[mapUtil.getBlock("dragon egg")] = mapUtil.nextVoxel("dragon_egg", 0);
		idMap[mapUtil.getBlock("redstone lamp off")] = mapUtil.nextTexture("redstone_lamp_off", 0);
		idMap[mapUtil.getBlock("redstone lamp on")] = mapUtil.nextTexture("redstone_lamp_on", 0);
		idMap[mapUtil.getBlock("cocoa stage 0")] = mapUtil.nextVoxel("cocoa_0", 0);
		idMap[mapUtil.getBlock("cocoa stage 1")] = mapUtil.nextVoxel("cocoa_1", 0);
		idMap[mapUtil.getBlock("cocoa stage 2")] = mapUtil.nextVoxel("cocoa_2", 0);
		idMap[mapUtil.getBlock("sandstone stairs bottom")] = mapUtil.nextVoxel("stairs_bottom_sandstone", 0);
		idMap[mapUtil.getBlock("sandstone stairs top")] = mapUtil.nextVoxel("stairs_top_sandstone", 0);
		idMap[mapUtil.getBlock("emerald ore")] = mapUtil.nextTexture("emerald_ore", 0);
		idMap[mapUtil.getBlock("emerald block")] = mapUtil.nextTexture("emerald_block", 0);
		idMap[mapUtil.getBlock("beacon")] = mapUtil.nextVoxel("beacon", 0);
	}
	
	public static int getDoorRotation(int lowerMetadata, int upperMetadata) {
		int metadata = ((upperMetadata&1)*8)|(lowerMetadata&7);
		int rotation = NONE;
		switch (metadata) {
		case 0:
			rotation = WEST;
			break;
		case 1:
			rotation = NORTH;
			break;
		case 2:
			rotation = EAST;
			break;
		case 3:
			rotation = NONE;
			break;
		case 4:
			rotation = NORTH | MIRROR;
			break;
		case 5:
			rotation = EAST | MIRROR;
			break;
		case 6:
			rotation = NONE | MIRROR;
			break;
		case 7:
			rotation = WEST | MIRROR;
			break;
		case 8:
			rotation = WEST | MIRROR;
			break;
		case 9:
			rotation = NORTH | MIRROR;
			break;
		case 10:
			rotation = EAST | MIRROR;
			break;
		case 11:
			rotation = NONE | MIRROR;
			break;
		case 12:
			rotation = NONE;
			break;
		case 13:
			rotation = WEST;
			break;
		case 14:
			rotation = NORTH;
			break;
		case 15:
			rotation = EAST;
			break;
		}
		return rotation;
	}
	
	public static int[][][] getIdMap() {
		return idMap;
	}
	
	public static String[] getAllBlocks() {
		return mapUtil.getAllBlocks();
	}
	
	public static String[] getAllTextures() {
		return mapUtil.getAllTextures();
	}
	
	public static String[] getAllVoxels() {
		return mapUtil.getAllVoxels();
	}
}
